- What happens when you initialize a repository? Why do you need to do it?

It creates and empty repository, without tracking files. It needs the command 'git init'. Then, can probe it with 'git log'. This command shows are the files in the location: Tracked and untracket files. Also, it shows if are or not commits.

- How is the staging area different from the working directory and the repository?
What value do you think it offers?

The staging area is a space when I can put all, some or one file that is updated comparing with anothers files, and it should be added to the next commit. Then, the file or files in the commit, will be added to the repository like 'tracker files'. In the working directory, the files remained will be here, like 'untracker files' or no commited yet.

- How can you use the staging area to make sure you have one commit per logical
change?

- What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

- How do the diagrams help you visualize the branch structure?

- What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

- What are the pros and cons of Git's automatic merging vs. always doing merges
manually?